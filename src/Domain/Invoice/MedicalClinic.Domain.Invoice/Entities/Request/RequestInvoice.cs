using System;
using MediatR;
using MedicalClinic.Domain.Invoice.Entities.Response;
using MedicalClinic.Domain.Common.Wrappers;

namespace MedicalClinic.Domain.Invoice.Entities.Request
{
    /// <summary>
    /// Request for Single Invoice
    /// </summary>
    public class RequestSingleInvoice
    {
        /// <summary>
        /// Account Number
        /// </summary>
        public int ACCOUNT_ID { get; set; }
    }
    /// <summary>
    /// Request for Multiple Invoice
    /// </summary>
    public class RequestMultipleInvoice
    {
        /// <summary>
        /// Patient ID
        /// </summary>
        public int PATIENT_ID { get; set; }
        /// <summary>
        /// Patient Document Type
        /// </summary>
        public int PATIENT_DOC_TYPE { get; set; }
        /// <summary>
        /// PAtient Document Number
        /// </summary>
        public int PATIENT_DOC { get; set; }
    }
    /// <summary>
    /// Request for Create Account
    /// </summary>
    public class RequestCreateAccount
    {
        /// <summary>
        /// Primary Key for Account - Account Number
        /// </summary>
        public int ACCOUNT_ID { get; set; }
        /// <summary>
        /// Admission Number
        /// </summary>
        public int ADMISSION_ID { get; set; }
        /// <summary>
        /// Medical History Number
        /// </summary>
        public int MEDICAL_HISTORY_ID { get; set; }
        /// <summary>
        /// Invoice Prefix for taxes
        /// </summary>
        public string INVOICE_PREFIX { get; set; }
        /// <summary>
        /// Invoice Numbeer
        /// </summary>
        public double INVOICE_NUMBER { get; set; }
        /// <summary>
        /// Type of Invoice, electronic or computer made
        /// </summary>
        public int INVOICE_TYPE { get; set; }
        /// <summary>
        /// Generation date of Accountr
        /// </summary>
        public DateTime ACCOUNT_DATE { get; set; }
        /// <summary>
        /// Date when the account converts on invoice
        /// </summary>
        public DateTime INVOICE_GENERATION_DATE { get; set; }
        /// <summary>
        /// Time when the account converts on invoice
        /// </summary>
        public DateTime INVOICE_GENERATION_TIME { get; set; }
        /// <summary>
        /// Medical Headquarter ID (ex. KENNEDY)
        /// </summary>
        public string HEAD_QUARTER_ID { get; set; }
        /// <summary>
        /// Code of the entity responsible of the payment
        /// </summary>
        public int RESPONSIBLE_CODE { get; set; }
        /// <summary>
        /// Agreement code for responsible
        /// </summary>
        public int AGREEMENT_CODE { get; set; }
        /// <summary>
        /// Determines if the invoice/account is aborted
        /// </summary>
        public bool ABORTED { get; set; }
        /// <summary>
        /// Determines if the invoice/account is aborted
        /// </summary>
        public bool PRINTED { get; set; }
        /// <summary>
        /// Determines if the invoice/account was printed
        /// </summary>
        public bool ACTIVE { get; set; }
        /// <summary>
        /// Determines if the invoice/account is locked
        /// </summary>
        public bool LOCKED { get; set; }
        /// <summary>
        /// Determines if the account is divided in different responsibles
        /// </summary>
        public bool DIVIDED_ACCOUNT { get; set; }
        /// <summary>
        /// Determines if the invoice/account depends of a soat insurance
        /// </summary>
        public bool SOAT_INVOICE { get; set; }
        /// <summary>
        /// Net value of the invoice/account
        /// </summary>
        public decimal NET_VALUE { get; set; }
        /// <summary>
        /// Copay value assigned by the responsible of paymennt
        /// </summary>
        public decimal COPAY_VALUE { get; set; }
        /// <summary>
        /// Discounts applicable to the invoice/account
        /// </summary>
        public decimal DISCOUNT { get; set; }
        /// <summary>
        /// Total vaule of the invoice / account
        /// </summary>
        public decimal TOTAL_VALUE { get; set; }
        /// <summary>
        /// Total value in letters
        /// </summary>
        public string LETTER_VALUE { get; set; }
        /// <summary>
        /// QUR code string generated by the system
        /// </summary>
        public string QR_CODE { get; set; }
        /// <summary>
        /// Physical route when the QR image was saved
        /// </summary>
        public string QR_PATH { get; set; }
        /// <summary>
        /// Number of authorization submitted by the responsible entity
        /// </summary>
        public double AUTHORIZATION_NUMBER { get; set; }
        /// <summary>
        /// Physical path for the PDF file generated by the system
        /// </summary>
        public string PDF_PATH { get; set; }
        /// <summary>
        /// Determines if the patient has covid
        /// </summary>
        public bool IS_COVID { get; set; }
        /// <summary>
        /// Determines if the invoice was verified
        /// </summary>
        public bool VERIFIED { get; set; }
        /// <summary>
        /// Determines if the invoice was sent via email
        /// </summary>
        public bool SEND_MAIL { get; set; }
        /// <summary>
        /// ADVANCED
        /// </summary>
        public decimal ADVANCED { get; set; }
        /// <summary>
        /// Number of Debit note associated with the invoice
        /// </summary>
        public decimal DEBIT_NOTE { get; set; }
        /// <summary>
        /// Number of Debit note associated with the invoice
        /// </summary>
        public decimal CREDIT_NOTE { get; set; }
    }
}
